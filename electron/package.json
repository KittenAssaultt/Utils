{
  "name": "utils",
  "version": "1.0.0",
  "productName": "Utils",
  "description": "An Electron application with Vue and TypeScript",
  "main": "./out/main/index.js",
  "author": "Duhao",
  "homepage": "https://github.com/KittenAssaultt/Utils",
  "repository": {
    "type": "git",
    "url": "https://github.com/KittenAssaultt/Utils"
  },
  "scripts": {
    "format": "prettier --write .",
    "lint": "eslint . --ext .js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts,.vue --fix",
    "typecheck:node": "tsc --noEmit -p tsconfig.node.json --composite false",
    "typecheck:web": "vue-tsc --noEmit -p tsconfig.web.json --composite false",
    "typecheck": "npm run typecheck:node && npm run typecheck:web",
    "start": "vite preview",
    "dev": "node -e \"require('fs').copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './public/pdf.worker.min.mjs')\" && electron-vite dev",
    "tesss": "vite build",
    "prebuild": "node -e \"const fs=require('fs');fs.copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './public/pdf.worker.min.mjs');fs.copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './resources/pdf.worker.min.mjs')\"",
    "build": "npm run prebuild && npm run typecheck && electron-vite build && node -e \"const fs=require('fs');fs.copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './out/renderer/pdf.worker.min.mjs');fs.copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './pdf.worker.min.mjs');if(!fs.existsSync('./out/renderer/assets')){fs.mkdirSync('./out/renderer/assets', {recursive: true})};fs.copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './out/renderer/assets/pdf.worker.min.mjs')\"",
    "postbuild": "echo '构建完成，确保PDF Worker文件已复制'",
    "postinstall": "electron-builder install-app-deps",
    "build:unpack": "npm run build && electron-builder --dir && node postbuild-fix.js",
    "build:win": "npm run build && node -e \"const fs=require('fs');if(!fs.existsSync('./dist')){fs.mkdirSync('./dist', {recursive: true})};fs.copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './dist/pdf.worker.min.mjs')\" && electron-builder --win",
    "clean-mac": "node -e \"const fs=require('fs');if(fs.existsSync('./dist')){fs.rmSync('./dist', {recursive: true, force: true})};fs.mkdirSync('./dist', {recursive: true})\"",
    "build:mac": "npm run clean-mac && npm run build && electron-builder --mac && node postbuild-fix.js",
    "build:mac-dir": "npm run build && node -e \"const fs=require('fs');if(!fs.existsSync('./dist')){fs.mkdirSync('./dist', {recursive: true})};fs.copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './dist/pdf.worker.min.mjs')\" && electron-builder --mac dir && node postbuild-fix.js",
    "build:mac-zip": "npm run build && node -e \"const fs=require('fs');if(!fs.existsSync('./dist')){fs.mkdirSync('./dist', {recursive: true})};fs.copyFileSync('./node_modules/pdfjs-dist/build/pdf.worker.min.mjs', './dist/pdf.worker.min.mjs')\" && electron-builder --mac zip && node postbuild-fix.js",
    "build:linux": "npm run build && electron-builder --linux",
    "publish:mac": "npm run build && electron-builder --mac --publish always",
    "publish:win": "npm run build && electron-builder --win --publish always",
    "publish:linux": "npm run build && electron-builder --linux --publish always",
    "publish": "node scripts/publish.js"
  },
  "files": [
    "out/**/*",
    "resources/**/*"
  ],
  "build": {
    "productName": "Utils",
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true
    },
    "appId": "com.kittenassaultt.utils",
    "asar": true,
    "files": [
      "out/**/*",
      "package.json",
      "resources/**/*"
    ],
    "asarUnpack": [
      "**/*.{node,dll,exe}",
      "out/renderer/pdf.worker.min.*",
      "out/renderer/assets/pdf.worker.min.*"
    ],
    "extraFiles": [
      {
        "from": "node_modules/pdfjs-dist/build/pdf.worker.min.mjs",
        "to": "pdf.worker.min.mjs"
      },
      {
        "from": "node_modules/pdfjs-dist/build/pdf.worker.min.mjs",
        "to": "resources/pdf.worker.min.mjs"
      }
    ],
    "extraResources": [
      {
        "from": "resources",
        "to": "resources"
      },
      {
        "from": "node_modules/pdfjs-dist/build/pdf.worker.min.mjs",
        "to": "pdf.worker.min.mjs"
      }
    ],
    "directories": {
      "output": "dist",
      "buildResources": "resources"
    },
    "publish": [
      {
        "provider": "github",
        "owner": "KittenAssaultt",
        "repo": "Utils"
      }
    ],
    "mac": {
      "hardenedRuntime": true,
      "icon": "./src/renderer/src/assets/img/icon.icns",
      "target": [
        {
          "target": "dmg",
          "arch": "arm64"
        }
      ],
      "artifactName": "${productName}-${version}-${arch}.${ext}"
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ],
      "window": {
        "width": 540,
        "height": 380
      },
      "format": "UDZO",
      "title": "${productName} ${version}"
    },
    "win": {
      "target": [
        "nsis",
        "zip"
      ],
      "icon": "./src/renderer/src/assets/img/logo 512x512.png",
      "artifactName": "${productName}-${version}-${arch}.${ext}",
      "extraResources": [
        {
          "from": "node_modules/pdfjs-dist/build/pdf.worker.min.mjs",
          "to": "pdf.worker.min.mjs"
        }
      ]
    },
    "linux": {
      "target": [
        "deb",
        "rpm"
      ],
      "icon": "src/assets/icons/png/512x512.png"
    }
  },
  "dependencies": {
    "@electron-toolkit/preload": "^3.0.0",
    "@electron-toolkit/utils": "^3.0.0",
    "axios": "^1.6.8",
    "element-plus": "^2.6.0",
    "html2canvas": "^1.4.1",
    "pinia": "^2.1.7",
    "vue": "^3.4.15",
    "vue-router": "^4.3.0"
  },
  "devDependencies": {
    "@electron-toolkit/eslint-config": "^1.0.2",
    "@electron-toolkit/eslint-config-ts": "^1.0.1",
    "@electron-toolkit/tsconfig": "^1.0.1",
    "@ffmpeg/core": "^0.12.10",
    "@ffmpeg/ffmpeg": "^0.12.15",
    "@ffmpeg/util": "^0.12.2",
    "@iconfu/svg-inject": "^1.2.3",
    "@rushstack/eslint-patch": "^1.7.1",
    "@tinymce/tinymce-vue": "^6.0.1",
    "@types/dplayer": "^1.25.5",
    "@types/jszip": "^3.4.0",
    "@types/node": "^18.19.21",
    "@types/pdfjs-dist": "^2.10.377",
    "@types/qrcode": "^1.5.5",
    "@vitejs/plugin-vue": "^5.0.3",
    "@vue/eslint-config-prettier": "^9.0.0",
    "@vue/eslint-config-typescript": "^12.0.0",
    "animate.css": "^4.1.1",
    "battery-status": "^1.0.3",
    "bootstrap-icons": "^1.11.3",
    "dplayer": "^1.27.1",
    "electron": "^34.2.0",
    "electron-builder": "^24.13.3",
    "electron-updater": "^6.3.9",
    "electron-vite": "^2.0.0",
    "embla-carousel": "^8.5.2",
    "embla-carousel-vue": "^8.5.2",
    "jspdf": "^3.0.1",
    "jszip": "^3.10.1",
    "multi-download": "^4.0.0",
    "pdfjs-dist": "^5.3.31",
    "prettier": "^3.2.4",
    "qrcode": "^1.5.4",
    "sass": "^1.77.6",
    "typescript": "^5.3.3",
    "unplugin-auto-import": "^0.17.5",
    "unplugin-vue-components": "^0.26.0",
    "vditor": "^3.10.7",
    "vite": "^5.0.12",
    "vite-plugin-prismjs": "^0.0.11",
    "vite-svg-loader": "^5.1.0",
    "vue-img-cutter": "^3.0.7",
    "vue-tsc": "^1.8.27",
    "vue-waterfall-plugin-next": "^2.6.4",
    "vue3-photo-preview": "^0.3.0"
  }
}